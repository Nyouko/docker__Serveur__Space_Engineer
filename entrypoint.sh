#!/bin/bash

# VARIABLES
if [ -z "$INSTANCE_NAME" ]; then
  INSTANCE_NAME="autogenerated"
fi
if [ -z "$WORLD_NAME" ]; then
  WORLD_NAME="World"
fi
if [ -z "$WORLD_TEMPLATE" ]; then
  WORLD_TEMPLATE="Home System"
fi
if [ "$OFFLINE" = "true" ]; then
  OFFLINE="OFFLINE"
else
  OFFLINE="ONLINE"
fi
if [ "$CREATIVE" = "true" ]; then
  CREATIVE="Creative"
else
  CREATIVE="Survival"
fi
if [ "$CROSSPLATFORM" = "true" ]; then
  CROSSPLATFORM="true"
else
  CROSSPLATFORM="false"
fi
if [ "$EXPERIMENTALMODE" = "true" ]; then
  EXPERIMENTALMODE="true"
else
  EXPERIMENTALMODE="false"
fi
if [ "$INGAMESCRIPT" = "true" ]; then
  INGAMESCRIPT="true"
else
  INGAMESCRIPT="false"
fi
if ! [[ "$NBR_PLAYER" =~ ^[0-9]+$ ]]; then
  NBR_PLAYER=4
fi
GAME_DIR="/appdata/space-engineers/SpaceEngineersDedicated"
INSTANCE_DIR="/appdata/space-engineers/instances/${INSTANCE_NAME}"
PLUGIN_DIR="/appdata/space-engineers/plugins"
WORLD_PATH="${INSTANCE_DIR}/Saves/${WORLD_NAME}/Sandbox_config.sbc"
CONFIG_PATH="${INSTANCE_DIR}/SpaceEngineers-Dedicated.cfg"
#INSTANCE_IP=$(hostname -I | sed "s= ==g")

echo "-------------------------------INSTALL & UPDATE------------------------------"
echo "-------------------------------Install of the game"
/usr/games/steamcmd +force_install_dir ${GAME_DIR} +login anonymous +@sSteamCmdForcePlatformType windows +app_update 298740 +quit
cd ${GAME_DIR}/DedicatedServer64/
mkdir -p "${INSTANCE_DIR}/Old-Logs" "${INSTANCE_DIR}/Saves/${WORLD_NAME}"

if [ -d "${INSTANCE_DIR}/Saves/${WORLD_NAME}" ] && [ -z "$(ls -A "${INSTANCE_DIR}/Saves/${WORLD_NAME}")" ]; then
  echo "-------------------------------Chargement du template de la map"
  cp -r "${GAME_DIR}/Content/CustomWorlds/${WORLD_TEMPLATE}/." "${INSTANCE_DIR}/Saves/${WORLD_NAME}/" &> /dev/null
fi

if ! test -e "${CONFIG_PATH}"; then
  echo "-------------------------------Pré-lancement du serveur"
  wine SpaceEngineersDedicated.exe -noconsole -ignorelastsession -path Z:\\appdata\\space-engineers\\instances\\${INSTANCE_NAME} &> /dev/null
  sleep 5
fi

echo "---------------------------------UPDATE CONFIG-------------------------------"
# update IP to host external ip
CURRENT_IP=$(grep -oEi '<IP>(.*)</IP>' "${CONFIG_PATH}" | sed -E "s=<IP>|</IP>==g")
#sed -i "s=<IP>.*</IP>=<IP>${INSTANCE_IP}</IP>=g" ${CONFIG_PATH} 2> /dev/null
sed -i "s=<IP>.*</IP>=<IP>0.0.0.0</IP>=g" "${CONFIG_PATH}"

echo "GameMode: ${CREATIVE}"
sed -i "s=<GameMode>.*</GameMode>=<GameMode>${CREATIVE}</GameMode>=g" "${CONFIG_PATH}" "${WORLD_PATH}"

echo "OnlineMode: ${OFFLINE}"
sed -i "s=<OnlineMode>.*</OnlineMode>=<OnlineMode>${OFFLINE}</OnlineMode>=g" "${CONFIG_PATH}" "${WORLD_PATH}"

echo "MaxPlayers: ${NBR_PLAYER}"
sed -i "s=<MaxPlayers>.*</MaxPlayers>=<MaxPlayers>${NBR_PLAYER}</MaxPlayers>=g" "${CONFIG_PATH}" "${WORLD_PATH}"

echo "ServerName: ${INSTANCE_NAME}"
sed -i "s=<ServerName />|<ServerName>.*</ServerName>=<ServerName>${INSTANCE_NAME}</ServerName>=g" "${CONFIG_PATH}"

echo "WorldName: ${WORLD_NAME}"
sed -i "s=<WorldName />|<WorldName>.*</WorldName>=<WorldName>${WORLD_NAME}</WorldName>=g" "${CONFIG_PATH}"

echo "CrossPlatform: ${CROSSPLATFORM}"
sed -i "s=<CrossPlatform>.*</CrossPlatform>=<CrossPlatform>${CROSSPLATFORM}</CrossPlatform>=g" "${CONFIG_PATH}"

echo "ExperimentalMode: ${EXPERIMENTALMODE}"
sed -i "s=<ExperimentalMode>.*</ExperimentalMode>=<ExperimentalMode>${EXPERIMENTALMODE}</ExperimentalMode>=g" "${CONFIG_PATH}" "${WORLD_PATH}"

echo "EnableIngameScripts: ${INGAMESCRIPT}"
sed -i "s=<EnableIngameScripts>.*</EnableIngameScripts>=<EnableIngameScripts>${INGAMESCRIPT}</EnableIngameScripts>=g" "${CONFIG_PATH}" "${WORLD_PATH}"

echo "Clear BlockTypeLimits dictionary"
sed -i "s=<dictionary />|<dictionary>.*</dictionary>=<dictionary />=g" "${CONFIG_PATH}"

# update world save path
SAVE_PATH="Z:\\\\appdata\\\\space-engineers\\\\instances\\\\${INSTANCE_NAME}\\\\Saves\\\\${WORLD_NAME}"
sed -E -i "s=<LoadWorld />|<LoadWorld.*LoadWorld>=<LoadWorld>${SAVE_PATH}</LoadWorld>=g" "${CONFIG_PATH}"

# Si la balise n'existait pas, l'insérer après </SessionSettings>
if ! grep -q "<LoadWorld>" "${CONFIG_PATH}"; then
  sed -i "/<\/SessionSettings>/a <LoadWorld>${SAVE_PATH}</LoadWorld>" "${CONFIG_PATH}"
fi


echo "---------------------------------UPDATE PLUGINS------------------------------"
PLUGIN_COUNT=$(ls -1 ${PLUGIN_DIR}/*.dll 2> /dev/null | wc -l)
echo "Found ${PLUGIN_COUNT} plugin(s) in ${PLUGIN_DIR}"

if [ "${PLUGIN_COUNT}" -gt "0" ]; then
  PLUGINS_STRING="<Plugins>$(ls -1 /appdata/space-engineers/plugins/*.dll |\
  sed -E "s=(.+\.dll)=<string>\1</string>=g" |\
  tr -d "\n" )</Plugins>"
else
  PLUGINS_STRING="<Plugins />"
fi

sed -E -i "s=<Plugins />|<Plugins.*Plugins>=${PLUGINS_STRING}=g" "${CONFIG_PATH}"

echo "-----------------------------CURRENT CONFIGURATION---------------------------"
echo "GAME_DIR=$GAME_DIR"
echo "CONFIG_PATH=$CONFIG_PATH"
echo "SAVE_PATH=$SAVE_PATH"
## END UPDATES ##
wine --version
echo "----------------------------------START GAME---------------------------------"
mv ${INSTANCE_DIR}/*.log ${INSTANCE_DIR}/Old-Logs/ 2> /dev/null

wine SpaceEngineersDedicated.exe -noconsole -ignorelastsession -path Z:\\appdata\\space-engineers\\instances\\${INSTANCE_NAME}
echo "-----------------------------------END GAME----------------------------------"